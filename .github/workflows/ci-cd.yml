# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Cache Conda packages
        uses: actions/cache@v4
        with:
          path: ~/.conda/pkgs
          key: ${{ runner.os }}-conda-pkgs-${{ hashFiles('environment.yaml') }}
  
      - name: Set up Conda (with Mamba)
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          use-mamba: true
          environment-file: environment.yaml
          activate-environment: binding_env

      - name: Install package
        run: |
          # no-deps so we rely on conda for everything else
          pip install --no-deps .

      - name: Install test deps
        run: pip install .[test]

      - name: Run tests (with debug)
        shell: bash -l {0}
        run: |
          echo "=== conda environments ==="
          conda info --envs
          echo "CONDA_PREFIX is: $CONDA_PREFIX"
          echo "which python? $(which python)"
          echo "python version: $(python --version)"
          echo "Looking for BioSimSpace…"
          conda list | grep -i biosimspace || echo ">>> BioSimSpace not found! <<<"
          source "$(conda info --base)/etc/profile.d/conda.sh"
          conda activate binding_env

          python - <<'PYCODE'
          import os, sys

          candidates = ["BioSimSpace", "biosimspace"]
          for candidate in candidates:
              try:
                  mod = __import__(candidate)
                  path = os.path.dirname(mod.__file__)
                  print(f"[OK] Module '{candidate}' lives at: {path}")
              except ImportError:
                  print(f"[FAIL] Module '{candidate}' import failed.")
          PYCODE


          echo "Now running pytest…"
          pytest --maxfail=1 --disable-warnings -q